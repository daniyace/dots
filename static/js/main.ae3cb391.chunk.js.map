{"version":3,"sources":["components/Game.jsx","components/Selection.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","size","matrix","cont","i","j","x","y","u","r","b","l","content","useState","grid","setGrid","turn","setTurn","red","setRed","green","setGreen","reset","setReset","surround","cell","pos","copy","keep","handleRigthClick","useEffect","ban","arr","push","filter","s","emptySquares","length","alert","className","map","row","col","onClick","handleReset","Selection","props","setPlayers","App","players","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA8QeA,MA3Qf,WAIE,IAHA,IAAIC,EAAO,GACPC,EAAS,GACTC,EAAO,EACFC,EAAI,EAAGA,EAAIH,EAAMG,IAAK,CAC7BF,EAAOE,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IACxBH,EAAOE,GAAGC,GAAK,CACbC,EAAGF,EACHG,EAAGF,EACHG,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,QAAST,KAIf,MAAwBU,mBAASX,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,EAA0BR,oBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,EAAMC,EAAKC,GAC3B,IAAIrB,EAAImB,EAAKnB,EACTC,EAAIkB,EAAKlB,EACTqB,GAAO,EACPV,EAAM,EACNE,EAAQ,EAEZ,OAAQM,GACN,IAAK,IACHC,EAAKrB,GAAGC,GAAGC,EAAIQ,EAAO,EAAI,EAChB,IAANV,IAMFqB,EAAKrB,EAAI,GAAGC,GAAGG,EAAIM,EAAO,EAAI,EAE5BW,EAAKrB,EAAI,GAAGC,GAAGC,GACfmB,EAAKrB,EAAI,GAAGC,GAAGE,GACfkB,EAAKrB,EAAI,GAAGC,GAAGG,GACfiB,EAAKrB,EAAI,GAAGC,GAAGI,IAEfgB,EAAKrB,EAAI,GAAGC,GAAGK,QAAUI,EAAO,IAAM,IACtCY,GAAO,IAbLD,EAAKrB,GAAGC,GAAGC,GAAKmB,EAAKrB,GAAGC,GAAGE,GAAKkB,EAAKrB,GAAGC,GAAGG,GAAKiB,EAAKrB,GAAGC,GAAGI,IAC7DgB,EAAKrB,GAAGC,GAAGK,QAAUI,EAAO,IAAM,IAClCY,GAAO,GAkBX,MACF,IAAK,IACHD,EAAKrB,GAAGC,GAAGI,EAAIK,EAAO,EAAI,EACtBW,EAAKrB,GAAGC,GAAGC,GAAKmB,EAAKrB,GAAGC,GAAGE,GAAKkB,EAAKrB,GAAGC,GAAGG,GAAKiB,EAAKrB,GAAGC,GAAGI,IAC7DgB,EAAKrB,GAAGC,GAAGK,QAAUI,EAAO,IAAM,IAClCY,GAAO,GAET,MACF,IAAK,IACHD,EAAKrB,GAAGC,GAAGG,EAAIM,EAAO,EAAI,EACtBW,EAAKrB,GAAGC,GAAGC,GAAKmB,EAAKrB,GAAGC,GAAGE,GAAKkB,EAAKrB,GAAGC,GAAGG,GAAKiB,EAAKrB,GAAGC,GAAGI,IAC7DgB,EAAKrB,GAAGC,GAAGK,QAAUI,EAAO,IAAM,IAClCY,GAAO,GAET,MACF,IAAK,IACHD,EAAKrB,GAAGC,GAAGE,EAAIO,EAAO,EAAI,EAChB,IAANT,IAMFoB,EAAKrB,GAAGC,EAAI,GAAGI,EAAIK,EAAO,EAAI,EAE5BW,EAAKrB,GAAGC,EAAI,GAAGC,GACfmB,EAAKrB,GAAGC,EAAI,GAAGE,GACfkB,EAAKrB,GAAGC,EAAI,GAAGG,GACfiB,EAAKrB,GAAGC,EAAI,GAAGI,IAEfgB,EAAKrB,GAAGC,EAAI,GAAGK,QAAUI,EAAO,IAAM,IACtCY,GAAO,IAbLD,EAAKrB,GAAGC,GAAGC,GAAKmB,EAAKrB,GAAGC,GAAGE,GAAKkB,EAAKrB,GAAGC,GAAGG,GAAKiB,EAAKrB,GAAGC,GAAGI,IAC7DgB,EAAKrB,GAAGC,GAAGK,QAAUI,EAAO,IAAM,IAClCY,GAAO,GAsBf,IAAK,IAAIxB,EAAI,EAAGA,EAAIH,EAAMG,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IACG,MAAvBsB,EAAKvB,GAAGC,GAAGO,SAAiBM,IACL,MAAvBS,EAAKvB,GAAGC,GAAGO,SAAiBQ,IAQpC,OAJAD,EAAOD,GACPG,EAASD,GAEJQ,GAAMX,GAASD,GACbW,GAGHE,EAAmB,SAACJ,EAAMC,GAC9B,OAAQA,GACN,IAAK,IACED,EAAKjB,GAAGO,EAAQS,EAASC,EAAMC,EAAP,YAAgBZ,KAC7C,MACF,IAAK,IACEW,EAAKd,GAAGI,EAAQS,EAASC,EAAMC,EAAP,YAAgBZ,KAC7C,MACF,IAAK,IACEW,EAAKf,GAAGK,EAAQS,EAASC,EAAMC,EAAP,YAAgBZ,KAC7C,MACF,IAAK,IACEW,EAAKhB,GAAGM,EAAQS,EAASC,EAAMC,EAAP,YAAgBZ,OA8CnD,OAdAgB,qBAAU,WACR,IAAKR,EAAO,CACV,IAAIS,GAAM,EACoB,IATb,WAEnB,IADA,IAAIC,EAAM,GACD5B,EAAI,EAAGA,EAAIH,EAAMG,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IAAK2B,EAAIC,KAAKnB,EAAKV,GAAGC,GAAGO,SACrD,OAAOoB,EAAIE,QAAO,SAACC,GAAD,MAAmB,iBAALA,KAK1BC,GAAeC,SACbnB,IAAQE,EAAOW,GAAM,EACpBO,OAAOpB,EAAME,EAAQ,MAAQ,SAAW,QAC7CG,GAAS,IAEPQ,IACFR,GAAS,GACTe,MAAM,qBAGT,CAACxB,EAAMQ,EAAOF,EAAOF,IAEtB,sBAAKqB,UAAU,OAAf,UACGzB,EAAK0B,KAAI,SAACC,EAAKrC,GAAN,OACR,8BACGqC,EAAID,KAAI,SAACE,EAAKrC,GAAN,OACP,qBAAakC,UAAU,gBAAvB,SACE,sBACEA,UACyB,kBAAhBG,EAAI9B,QACP,OADJ,eAEY8B,EAAI9B,SAJpB,UAOE,qBACE2B,UACY,IAAVG,EAAIlC,EACA,QACU,IAAVkC,EAAIlC,EACJ,QACAQ,EACA,SACA,SAEN2B,QAAS,WACPd,EAAiBa,EAAK,QAG1B,qBACEH,UACY,IAAVG,EAAI/B,EACA,QACU,IAAV+B,EAAI/B,EACJ,QACAK,EACA,SACA,SAEN2B,QAAS,WACPd,EAAiBa,EAAK,QAG1B,qBACEH,UACY,IAAVG,EAAIhC,EACA,QACU,IAAVgC,EAAIhC,EACJ,QACAM,EACA,SACA,SAEN2B,QAAS,WACPd,EAAiBa,EAAK,QAG1B,qBACEH,UACY,IAAVG,EAAIjC,EACA,QACU,IAAViC,EAAIjC,EACJ,QACAO,EACA,SACA,SAEN2B,QAAS,WACPd,EAAiBa,EAAK,YA7DpBrC,OAFJD,MAuEXkB,EACC,wBAAQiB,UAAU,wBAAwBI,QAAS,kBApHrC,WAGlB,IAFA,IAAIzC,EAAS,GACTC,EAAO,EACFC,EAAI,EAAGA,EAAIH,EAAMG,IAAK,CAC7BF,EAAOE,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IACxBH,EAAOE,GAAGC,GAAK,CACbC,EAAGF,EACHG,EAAGF,EACHG,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,QAAST,KAIfY,EAAQb,GACRe,GAAQ,GACRM,GAAS,GAiGoDqB,IAAzD,mBAIA,qCACE,qBAAIL,UAAU,OAAd,oBAEE,sBAAMA,UAAWvB,EAAO,KAAO,KAA/B,SACGA,EAAO,OAAS,WAEnB,0BAEF,qBAAIuB,UAAU,OAAd,kBACO,sBAAMA,UAAU,KAAhB,SAAsBrB,IAD7B,UACgD,IAC9C,sBAAMqB,UAAU,KAAhB,SAAsBnB,cCxOnByB,G,MA3BG,SAACC,GACjB,OACE,sBAAKP,UAAU,sBAAf,UACE,iCACE,oBAAIA,UAAU,cAAd,uCAEF,oCACE,oBAAIA,UAAU,kBAAd,0CACA,sBAAKA,UAAU,SAAf,UACE,wBACEA,UAAU,2BACVI,QAAS,kBAAMG,EAAMC,WAAW,IAFlC,eAMA,wBACER,UAAU,kBACVI,QAAS,kBAAMG,EAAMC,WAAW,IAFlC,0BCDKC,MAbf,WACE,MAA8BnC,mBAAS,GAAvC,mBAAOoC,EAAP,KAAgBF,EAAhB,KACA,OACE,qBAAKR,UAAU,YAAf,SACe,IAAZU,EACC,cAAC,EAAD,CAAWF,WAAYA,IAEvB,cAAC,EAAD,CAAME,QAASA,OCCRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae3cb391.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/game.css';\r\n\r\nfunction Game() {\r\n  let size = 10;\r\n  let matrix = [];\r\n  let cont = 0;\r\n  for (var i = 0; i < size; i++) {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < size; j++) {\r\n      matrix[i][j] = {\r\n        x: i,\r\n        y: j,\r\n        u: false,\r\n        r: false,\r\n        b: false,\r\n        l: false,\r\n        content: cont++,\r\n      };\r\n    }\r\n  }\r\n  const [grid, setGrid] = useState(matrix);\r\n  const [turn, setTurn] = useState(true);\r\n  const [red, setRed] = useState(0);\r\n  const [green, setGreen] = useState(0);\r\n\r\n  const [reset, setReset] = useState(false);\r\n\r\n  const surround = (cell, pos, copy) => {\r\n    let x = cell.x;\r\n    let y = cell.y;\r\n    let keep = false;\r\n    let red = 0;\r\n    let green = 0;\r\n\r\n    switch (pos) {\r\n      case 'u':\r\n        copy[x][y].u = turn ? 1 : 2;\r\n        if (x === 0) {\r\n          if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n            copy[x][y].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n        } else {\r\n          copy[x - 1][y].b = turn ? 1 : 2;\r\n          if (\r\n            copy[x - 1][y].u &&\r\n            copy[x - 1][y].r &&\r\n            copy[x - 1][y].b &&\r\n            copy[x - 1][y].l\r\n          ) {\r\n            copy[x - 1][y].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n          if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n            copy[x][y].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n        }\r\n        break;\r\n      case 'l':\r\n        copy[x][y].l = turn ? 1 : 2;\r\n        if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n          copy[x][y].content = turn ? 'R' : 'G';\r\n          keep = true;\r\n        }\r\n        break;\r\n      case 'b':\r\n        copy[x][y].b = turn ? 1 : 2;\r\n        if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n          copy[x][y].content = turn ? 'R' : 'G';\r\n          keep = true;\r\n        }\r\n        break;\r\n      case 'r':\r\n        copy[x][y].r = turn ? 1 : 2;\r\n        if (y === 0) {\r\n          if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n            copy[x][y].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n        } else {\r\n          copy[x][y - 1].l = turn ? 1 : 2;\r\n          if (\r\n            copy[x][y - 1].u &&\r\n            copy[x][y - 1].r &&\r\n            copy[x][y - 1].b &&\r\n            copy[x][y - 1].l\r\n          ) {\r\n            copy[x][y - 1].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n          if (copy[x][y].u && copy[x][y].r && copy[x][y].b && copy[x][y].l) {\r\n            copy[x][y].content = turn ? 'R' : 'G';\r\n            keep = true;\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n\r\n    for (var i = 0; i < size; i++) {\r\n      for (var j = 0; j < size; j++) {\r\n        if (copy[i][j].content === 'R') red++;\r\n        if (copy[i][j].content === 'G') green++;\r\n      }\r\n    }\r\n\r\n    setRed(red);\r\n    setGreen(green);\r\n\r\n    if (!keep) setTurn(!turn);\r\n    return copy;\r\n  };\r\n\r\n  const handleRigthClick = (cell, pos) => {\r\n    switch (pos) {\r\n      case 'u':\r\n        if (!cell.u) setGrid(surround(cell, pos, [...grid]));\r\n        break;\r\n      case 'l':\r\n        if (!cell.l) setGrid(surround(cell, pos, [...grid]));\r\n        break;\r\n      case 'b':\r\n        if (!cell.b) setGrid(surround(cell, pos, [...grid]));\r\n        break;\r\n      case 'r':\r\n        if (!cell.r) setGrid(surround(cell, pos, [...grid]));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  const handleReset = () => {\r\n    let matrix = [];\r\n    let cont = 0;\r\n    for (var i = 0; i < size; i++) {\r\n      matrix[i] = [];\r\n      for (var j = 0; j < size; j++) {\r\n        matrix[i][j] = {\r\n          x: i,\r\n          y: j,\r\n          u: false,\r\n          r: false,\r\n          b: false,\r\n          l: false,\r\n          content: cont++,\r\n        };\r\n      }\r\n    }\r\n    setGrid(matrix);\r\n    setTurn(true);\r\n    setReset(false);\r\n  };\r\n  const emptySquares = () => {\r\n    let arr = [];\r\n    for (var i = 0; i < size; i++)\r\n      for (var j = 0; j < size; j++) arr.push(grid[i][j].content);\r\n    return arr.filter((s) => typeof s == 'number');\r\n  };\r\n  useEffect(() => {\r\n    if (!reset) {\r\n      let ban = false;\r\n      if (emptySquares().length === 0) {\r\n        if (red === green) ban = true;\r\n        else alert((red > green ? 'Red' : 'Green') + ' Win');\r\n        setReset(true);\r\n      }\r\n      if (ban) {\r\n        setReset(true);\r\n        alert('It´s a tie');\r\n      }\r\n    }\r\n  }, [grid, reset, green, red]);\r\n  return (\r\n    <div className='grid'>\r\n      {grid.map((row, i) => (\r\n        <div key={i}>\r\n          {row.map((col, j) => (\r\n            <div key={j} className='d-inline-flex'>\r\n              <div\r\n                className={\r\n                  typeof col.content === 'number'\r\n                    ? 'cont'\r\n                    : `cont ${col.content}`\r\n                }\r\n              >\r\n                <div\r\n                  className={\r\n                    col.u === 1\r\n                      ? 'd1 p1'\r\n                      : col.u === 2\r\n                      ? 'd1 p2'\r\n                      : turn\r\n                      ? 'd1 ho1'\r\n                      : 'd1 ho2'\r\n                  }\r\n                  onClick={() => {\r\n                    handleRigthClick(col, 'u');\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className={\r\n                    col.l === 1\r\n                      ? 'd2 p1'\r\n                      : col.l === 2\r\n                      ? 'd2 p2'\r\n                      : turn\r\n                      ? 'd2 ho1'\r\n                      : 'd2 ho2'\r\n                  }\r\n                  onClick={() => {\r\n                    handleRigthClick(col, 'l');\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className={\r\n                    col.b === 1\r\n                      ? 'd3 p1'\r\n                      : col.b === 2\r\n                      ? 'd3 p2'\r\n                      : turn\r\n                      ? 'd3 ho1'\r\n                      : 'd3 ho2'\r\n                  }\r\n                  onClick={() => {\r\n                    handleRigthClick(col, 'b');\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className={\r\n                    col.r === 1\r\n                      ? 'd4 p1'\r\n                      : col.r === 2\r\n                      ? 'd4 p2'\r\n                      : turn\r\n                      ? 'd4 ho1'\r\n                      : 'd4 ho2'\r\n                  }\r\n                  onClick={() => {\r\n                    handleRigthClick(col, 'r');\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      {reset ? (\r\n        <button className='btn btn-primary reset' onClick={() => handleReset()}>\r\n          Reset\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <h2 className='turn'>\r\n            Turn of\r\n            <span className={turn ? 'j1' : 'j2'}>\r\n              {turn ? ' RED' : ' GREEN'}\r\n            </span>\r\n            <br />\r\n          </h2>\r\n          <h2 className='turn'>\r\n            Red: <span className='j1'>{red}</span> Green:{' '}\r\n            <span className='j2'>{green}</span>\r\n          </h2>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport '../styles/selection.css';\r\n\r\nconst Selection = (props) => {\r\n  return (\r\n    <div className='selection container'>\r\n      <header>\r\n        <h1 className='text-center'>Dots and boxes on React</h1>\r\n      </header>\r\n      <section>\r\n        <h3 className='text-center par'>Choose the number of players</h3>\r\n        <div className='center'>\r\n          <button\r\n            className='btn btn-primary disabled'\r\n            onClick={() => props.setPlayers(1)}\r\n          >\r\n            1\r\n          </button>\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => props.setPlayers(2)}\r\n          >\r\n            2\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","import React, { useState } from 'react';\nimport Game from './components/Game';\nimport Selection from './components/Selection';\n\nfunction App() {\n  const [players, setPlayers] = useState(0);\n  return (\n    <div className='container'>\n      {players === 0 ? (\n        <Selection setPlayers={setPlayers} />\n      ) : (\n        <Game players={players} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}